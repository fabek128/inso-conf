_id: req_b263cb6137734bb48219c1f030ef39b3
type: Request
parentId: fld_94f8b8f4e7274690b0a1595e11546e94
modified: 1685445549043
created: 1685445549043
url: "{{keycloak_url}}/admin/realms/{{realm}}/partialImport"
name: "Partial import from a JSON file to an existing realm [SAT] "
description: |+
  Partial import from a JSON file to an existing realm.


method: POST
body:
  mimeType: application/json
  text: >-
    {
        "id": "heroes",
        "realm": "heroes",
        "notBefore": 1589105644,
        "revokeRefreshToken": false,
        "refreshTokenMaxReuse": 0,
        "accessTokenLifespan": 300,
        "accessTokenLifespanForImplicitFlow": 900,
        "ssoSessionIdleTimeout": 1800,
        "ssoSessionMaxLifespan": 36000,
        "ssoSessionIdleTimeoutRememberMe": 0,
        "ssoSessionMaxLifespanRememberMe": 0,
        "offlineSessionIdleTimeout": 2592000,
        "offlineSessionMaxLifespanEnabled": false,
        "offlineSessionMaxLifespan": 5184000,
        "clientSessionIdleTimeout": 0,
        "clientSessionMaxLifespan": 0,
        "accessCodeLifespan": 60,
        "accessCodeLifespanUserAction": 300,
        "accessCodeLifespanLogin": 1800,
        "actionTokenGeneratedByAdminLifespan": 43200,
        "actionTokenGeneratedByUserLifespan": 300,
        "enabled": true,
        "sslRequired": "external",
        "registrationAllowed": false,
        "registrationEmailAsUsername": false,
        "rememberMe": false,
        "verifyEmail": false,
        "loginWithEmailAllowed": true,
        "duplicateEmailsAllowed": false,
        "resetPasswordAllowed": false,
        "editUsernameAllowed": false,
        "bruteForceProtected": false,
        "permanentLockout": false,
        "maxFailureWaitSeconds": 900,
        "minimumQuickLoginWaitSeconds": 60,
        "waitIncrementSeconds": 60,
        "quickLoginCheckMilliSeconds": 1000,
        "maxDeltaTimeSeconds": 43200,
        "failureFactor": 30,
        "defaultRoles": [
            "offline_access",
            "uma_authorization"
        ],
        "requiredCredentials": [
            "password"
        ],
        "otpPolicyType": "totp",
        "otpPolicyAlgorithm": "HmacSHA1",
        "otpPolicyInitialCounter": 0,
        "otpPolicyDigits": 6,
        "otpPolicyLookAheadWindow": 1,
        "otpPolicyPeriod": 30,
        "otpSupportedApplications": [
            "FreeOTP",
            "Google Authenticator"
        ],
        "webAuthnPolicyRpEntityName": "keycloak",
        "webAuthnPolicySignatureAlgorithms": [
            "ES256"
        ],
        "webAuthnPolicyRpId": "",
        "webAuthnPolicyAttestationConveyancePreference": "not specified",
        "webAuthnPolicyAuthenticatorAttachment": "not specified",
        "webAuthnPolicyRequireResidentKey": "not specified",
        "webAuthnPolicyUserVerificationRequirement": "not specified",
        "webAuthnPolicyCreateTimeout": 0,
        "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyAcceptableAaguids": [],
        "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
        "webAuthnPolicyPasswordlessSignatureAlgorithms": [
            "ES256"
        ],
        "webAuthnPolicyPasswordlessRpId": "",
        "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
        "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
        "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
        "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
        "webAuthnPolicyPasswordlessCreateTimeout": 0,
        "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
        "webAuthnPolicyPasswordlessAcceptableAaguids": [],
        "scopeMappings": [
            {
                "clientScope": "offline_access",
                "roles": [
                    "offline_access"
                ]
            }
        ],
        "clientScopes": [
            {
                "id": "c428dc50-0677-44ff-aee8-a3568046fd30",
                "name": "address",
                "description": "OpenID Connect built-in scope: address",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "true",
                    "consent.screen.text": "${addressScopeConsentText}"
                },
                "protocolMappers": [
                    {
                        "id": "b8adec7c-78a4-447d-a1f6-07945407de39",
                        "name": "address",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-address-mapper",
                        "consentRequired": false,
                        "config": {
                            "user.attribute.formatted": "formatted",
                            "user.attribute.country": "country",
                            "user.attribute.postal_code": "postal_code",
                            "userinfo.token.claim": "true",
                            "user.attribute.street": "street",
                            "id.token.claim": "true",
                            "user.attribute.region": "region",
                            "access.token.claim": "true",
                            "user.attribute.locality": "locality"
                        }
                    }
                ]
            },
            {
                "id": "4f841085-b7be-4596-b99b-15422e16bf0b",
                "name": "email",
                "description": "OpenID Connect built-in scope: email +",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "true",
                    "consent.screen.text": "${emailScopeConsentText}"
                },
                "protocolMappers": [
                    {
                        "id": "62224d4c-7181-4790-a3c9-71cdbf1516a5",
                        "name": "email",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-property-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "email",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "email",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "af6262f6-6b60-4e47-899e-248ebbe55705",
                        "name": "protocol-mapper-2",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-property-mapper",
                        "consentRequired": false,
                        "config": {}
                    },
                    {
                        "id": "e7b52fef-f525-4314-abf3-267d9f48082e",
                        "name": "email verified",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-property-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "emailVerified",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "email_verified",
                            "jsonType.label": "boolean"
                        }
                    },
                    {
                        "id": "ab13e658-d258-483a-b6d2-93cd7f45672d",
                        "name": "protocol-mapper",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-property-mapper",
                        "consentRequired": false,
                        "config": {}
                    }
                ]
            },
            {
                "id": "51925c34-1804-4159-a970-e1a65d3323c0",
                "name": "microprofile-jwt",
                "description": "Microprofile - JWT built-in scope",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "false"
                },
                "protocolMappers": [
                    {
                        "id": "cccf4cd9-401d-48e9-ae86-5c2bf720220f",
                        "name": "groups",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-realm-role-mapper",
                        "consentRequired": false,
                        "config": {
                            "multivalued": "true",
                            "user.attribute": "foo",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "groups",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "b00e8121-fb23-44fa-9592-09e6d3650436",
                        "name": "upn",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-property-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "username",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "upn",
                            "jsonType.label": "String"
                        }
                    }
                ]
            },
            {
                "id": "42eb8c36-025e-424a-b43e-3e67305db9cb",
                "name": "offline_access",
                "description": "OpenID Connect built-in scope: offline_access",
                "protocol": "openid-connect",
                "attributes": {
                    "consent.screen.text": "${offlineAccessScopeConsentText}",
                    "display.on.consent.screen": "true"
                }
            },
            {
                "id": "22369324-bf37-426e-8704-f648f62d27f8",
                "name": "phone",
                "description": "OpenID Connect built-in scope: phone",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "true",
                    "consent.screen.text": "${phoneScopeConsentText}"
                },
                "protocolMappers": [
                    {
                        "id": "d7d5a1cc-f343-49b3-aa46-b42e6b274e83",
                        "name": "phone number verified",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "phoneNumberVerified",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "phone_number_verified",
                            "jsonType.label": "boolean"
                        }
                    },
                    {
                        "id": "d41cc5c8-9401-491f-adea-b5806c3adacd",
                        "name": "phone number",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "phoneNumber",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "phone_number",
                            "jsonType.label": "String"
                        }
                    }
                ]
            },
            {
                "id": "082e427a-aef5-4461-b8c3-970a90991b1e",
                "name": "profile",
                "description": "OpenID Connect built-in scope: profile",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "true",
                    "consent.screen.text": "${profileScopeConsentText}"
                },
                "protocolMappers": [
                    {
                        "id": "a322869a-9430-4aa9-b8b0-29bed1905160",
                        "name": "locale",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "locale",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "locale",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "62e05562-a7e4-40a6-954e-13473ceb34c2",
                        "name": "given name",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-property-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "firstName",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "given_name",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "9a98e8d2-238d-40da-b07c-968bc494ad5f",
                        "name": "nickname",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "nickname",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "nickname",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "4ea62cf5-f2be-449b-8e62-19d82ee3bf25",
                        "name": "gender",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "gender",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "gender",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "8003e7da-6bbe-41cb-b44a-8ae5fb5305e0",
                        "name": "full name",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-full-name-mapper",
                        "consentRequired": false,
                        "config": {
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "userinfo.token.claim": "true"
                        }
                    },
                    {
                        "id": "30e14266-1aeb-4a59-a337-3e6393a4a111",
                        "name": "family name",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-property-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "lastName",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "family_name",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "c1d92d15-7d19-4260-af10-37a69b9cd193",
                        "name": "website",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "website",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "website",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "5a559fe9-a688-4d6f-9b0f-aa03f041e3e3",
                        "name": "birthdate",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "birthdate",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "birthdate",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "1cdde753-3ee5-441b-8df2-60da7ecca9d6",
                        "name": "profile",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "profile",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "profile",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "6308310b-daee-461f-9eba-b8c922c04dfd",
                        "name": "middle name",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "middleName",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "middle_name",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "b2871f34-48d3-437a-aa40-7c293ce63827",
                        "name": "updated at",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "updatedAt",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "updated_at",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "45edbce1-716c-47c1-b1ca-28124ada1e9d",
                        "name": "picture",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "picture",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "picture",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "609d8572-b194-4a2a-bc97-d9aecd26daaa",
                        "name": "zoneinfo",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-attribute-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "zoneinfo",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "zoneinfo",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "ac373d8f-539c-4242-bdbe-def6b32a8582",
                        "name": "username",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-property-mapper",
                        "consentRequired": false,
                        "config": {
                            "userinfo.token.claim": "true",
                            "user.attribute": "username",
                            "id.token.claim": "true",
                            "access.token.claim": "true",
                            "claim.name": "preferred_username",
                            "jsonType.label": "String"
                        }
                    }
                ]
            },
            {
                "id": "393eed37-8c38-4b75-aaac-c3e950cf43fc",
                "name": "role_list",
                "description": "SAML role list",
                "protocol": "saml",
                "attributes": {
                    "consent.screen.text": "${samlRoleListScopeConsentText}",
                    "display.on.consent.screen": "true"
                },
                "protocolMappers": [
                    {
                        "id": "7794d99d-0738-49c9-8b75-8acb188a78e5",
                        "name": "role list",
                        "protocol": "saml",
                        "protocolMapper": "saml-role-list-mapper",
                        "consentRequired": false,
                        "config": {
                            "single": "false",
                            "attribute.nameformat": "Basic",
                            "attribute.name": "Role"
                        }
                    }
                ]
            },
            {
                "id": "c799cfa9-fc42-4cf5-8cb2-b1730c4ec012",
                "name": "roles",
                "description": "OpenID Connect scope for add user roles to the access token",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "false",
                    "display.on.consent.screen": "true",
                    "consent.screen.text": "${rolesScopeConsentText}"
                },
                "protocolMappers": [
                    {
                        "id": "efdc6358-b579-4600-8b66-b48a918c041f",
                        "name": "client roles",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-client-role-mapper",
                        "consentRequired": false,
                        "config": {
                            "multivalued": "true",
                            "user.attribute": "foo",
                            "access.token.claim": "true",
                            "claim.name": "resource_access.${client_id}.roles",
                            "jsonType.label": "String"
                        }
                    },
                    {
                        "id": "c1c51bdd-7165-4b8f-8ba2-eccb9dc32c17",
                        "name": "audience resolve",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-audience-resolve-mapper",
                        "consentRequired": false,
                        "config": {}
                    },
                    {
                        "id": "c57a0d2e-d119-4ed3-ac27-2d83f86c066c",
                        "name": "realm roles",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-usermodel-realm-role-mapper",
                        "consentRequired": false,
                        "config": {
                            "multivalued": "true",
                            "user.attribute": "foo",
                            "access.token.claim": "true",
                            "claim.name": "realm_access.roles",
                            "jsonType.label": "String"
                        }
                    }
                ]
            },
            {
                "id": "59df1f86-bf4b-4962-bc96-c64ed8f93327",
                "name": "test-client-scope",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "true",
                    "display.on.consent.screen": "true"
                }
            },
            {
                "id": "3a4f0249-9131-40c1-b8f4-027a778af023",
                "name": "web-origins",
                "description": "OpenID Connect scope for add allowed web origins to the access token",
                "protocol": "openid-connect",
                "attributes": {
                    "include.in.token.scope": "false",
                    "display.on.consent.screen": "false",
                    "consent.screen.text": ""
                },
                "protocolMappers": [
                    {
                        "id": "2b84bf32-ed3f-4053-add2-d30eff142db0",
                        "name": "allowed web origins",
                        "protocol": "openid-connect",
                        "protocolMapper": "oidc-allowed-origins-mapper",
                        "consentRequired": false,
                        "config": {}
                    }
                ]
            }
        ],
        "defaultDefaultClientScopes": [
            "profile",
            "role_list",
            "web-origins",
            "email",
            "roles"
        ],
        "defaultOptionalClientScopes": [
            "phone",
            "offline_access",
            "microprofile-jwt",
            "test-client-scope",
            "address"
        ],
        "browserSecurityHeaders": {
            "contentSecurityPolicyReportOnly": "",
            "xContentTypeOptions": "nosniff",
            "xRobotsTag": "none",
            "xFrameOptions": "SAMEORIGIN",
            "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
            "xXSSProtection": "1; mode=block",
            "strictTransportSecurity": "max-age=31536000; includeSubDomains"
        },
        "smtpServer": {},
        "eventsEnabled": false,
        "eventsListeners": [
            "jboss-logging"
        ],
        "enabledEventTypes": [],
        "adminEventsEnabled": false,
        "adminEventsDetailsEnabled": false,
        "identityProviders": [
            {
                "alias": "keycloak-oidc",
                "internalId": "d79d0d65-8ee1-47f0-8611-f9e6eea71f20",
                "providerId": "keycloak-oidc",
                "enabled": true,
                "updateProfileFirstLoginMode": "on",
                "trustEmail": false,
                "storeToken": false,
                "addReadTokenRoleOnCreate": false,
                "authenticateByDefault": false,
                "linkOnly": false,
                "firstBrokerLoginFlowAlias": "first broker login",
                "config": {
                    "clientId": "ssss",
                    "tokenUrl": "http://localhost",
                    "authorizationUrl": "http://localhost",
                    "clientAuthMethod": "client_secret_basic",
                    "syncMode": "IMPORT",
                    "clientSecret": "**********",
                    "useJwksUrl": "true"
                }
            },
            {
                "alias": "keycloak-oidc-2",
                "internalId": "7cf3fd74-8d3a-4c8d-b651-fcc885df8a31",
                "providerId": "keycloak-oidc",
                "enabled": true,
                "updateProfileFirstLoginMode": "on",
                "trustEmail": false,
                "storeToken": false,
                "addReadTokenRoleOnCreate": false,
                "authenticateByDefault": false,
                "linkOnly": false,
                "firstBrokerLoginFlowAlias": "first broker login",
                "config": {}
            }
        ],
        "identityProviderMappers": [
            {
                "id": "42c7b62d-4383-42c9-a8a0-65519e2c2543",
                "name": "test-mapper",
                "identityProviderAlias": "keycloak-oidc2",
                "identityProviderMapper": "keycloak-oidc",
                "config": {}
            },
            {
                "id": "ea65c956-24c7-4587-8fe7-c07222e3485d",
                "name": "test",
                "identityProviderAlias": "keycloak-oidc-2",
                "identityProviderMapper": "hardcoded-user-session-attribute-idp-mapper",
                "config": {
                    "syncMode": "INHERIT"
                }
            }
        ],
        "components": {
            "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
                {
                    "id": "858f626c-d3b5-465b-b3ef-1a47deeb33b4",
                    "name": "test",
                    "providerId": "max-clients",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {
                        "max-clients": [
                            "200"
                        ]
                    }
                },
                {
                    "id": "7a084caa-36f4-4ea4-8dcb-56b1b189c2fa",
                    "name": "Trusted Hosts",
                    "providerId": "trusted-hosts",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {
                        "host-sending-registration-request-must-match": [
                            "true"
                        ],
                        "client-uris-must-match": [
                            "true"
                        ]
                    }
                },
                {
                    "id": "94958c8d-2ca3-4680-8367-e187d295d707",
                    "name": "Allowed Client Scopes",
                    "providerId": "allowed-client-templates",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {
                        "allow-default-scopes": [
                            "true"
                        ]
                    }
                },
                {
                    "id": "a07ec653-9fe9-4c92-a95e-676e6390bb7e",
                    "name": "Full Scope Disabled",
                    "providerId": "scope",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {}
                },
                {
                    "id": "5fbc94d0-5743-480b-9c55-dfe2631ddcd1",
                    "name": "Allowed Protocol Mapper Types",
                    "providerId": "allowed-protocol-mappers",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {
                        "allowed-protocol-mapper-types": [
                            "oidc-usermodel-property-mapper",
                            "saml-role-list-mapper",
                            "oidc-address-mapper",
                            "oidc-usermodel-attribute-mapper",
                            "oidc-sha256-pairwise-sub-mapper",
                            "saml-user-attribute-mapper",
                            "saml-user-property-mapper",
                            "oidc-full-name-mapper"
                        ]
                    }
                },
                {
                    "id": "9790934a-913c-4027-8e9a-0c5b096a8b55",
                    "name": "Allowed Protocol Mapper Types",
                    "providerId": "allowed-protocol-mappers",
                    "subType": "authenticated",
                    "subComponents": {},
                    "config": {
                        "allowed-protocol-mapper-types": [
                            "oidc-full-name-mapper",
                            "saml-role-list-mapper",
                            "saml-user-attribute-mapper",
                            "oidc-usermodel-attribute-mapper",
                            "oidc-sha256-pairwise-sub-mapper",
                            "oidc-address-mapper",
                            "oidc-usermodel-property-mapper",
                            "saml-user-property-mapper"
                        ]
                    }
                },
                {
                    "id": "11951897-c9f1-4f46-9df4-16e05dedd4a2",
                    "name": "Consent Required",
                    "providerId": "consent-required",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {}
                },
                {
                    "id": "e3f35697-fc92-4d38-80d9-2f643dca22e0",
                    "name": "Allowed Client Scopes",
                    "providerId": "allowed-client-templates",
                    "subType": "authenticated",
                    "subComponents": {},
                    "config": {
                        "allow-default-scopes": [
                            "true"
                        ]
                    }
                },
                {
                    "id": "4751745f-877b-4414-80c5-27dbf3dc2e88",
                    "name": "Max Clients Limit",
                    "providerId": "max-clients",
                    "subType": "anonymous",
                    "subComponents": {},
                    "config": {
                        "max-clients": [
                            "200"
                        ]
                    }
                }
            ],
            "org.keycloak.keys.KeyProvider": [
                {
                    "id": "60ae5de8-bef8-40ad-ab08-ccd72894202e",
                    "name": "hmac-generated",
                    "providerId": "hmac-generated",
                    "subComponents": {},
                    "config": {
                        "priority": [
                            "100"
                        ],
                        "algorithm": [
                            "HS256"
                        ]
                    }
                },
                {
                    "id": "362b0a6a-8a0c-4394-851e-b6ad6be75ea1",
                    "name": "aes-generated",
                    "providerId": "aes-generated",
                    "subComponents": {},
                    "config": {
                        "priority": [
                            "100"
                        ]
                    }
                },
                {
                    "id": "5208907e-04f6-43a9-b10f-77042a355be5",
                    "name": "rsa-generated",
                    "providerId": "rsa-generated",
                    "subComponents": {},
                    "config": {
                        "priority": [
                            "100"
                        ]
                    }
                }
            ]
        },
        "internationalizationEnabled": false,
        "supportedLocales": [],
        "authenticationFlows": [
            {
                "id": "5e435b45-5046-410c-86b1-4d0a2593600d",
                "alias": "Account verification options",
                "description": "Method with which to verity the existing account",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "idp-email-verification",
                        "requirement": "ALTERNATIVE",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "requirement": "ALTERNATIVE",
                        "priority": 20,
                        "flowAlias": "Verify Existing Account by Re-authentication",
                        "userSetupAllowed": false,
                        "autheticatorFlow": true
                    }
                ]
            },
            {
                "id": "a1aa24b3-544a-4d04-83ca-ad091df14325",
                "alias": "Authentication Options",
                "description": "Authentication options.",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "basic-auth",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "basic-auth-otp",
                        "requirement": "DISABLED",
                        "priority": 20,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "auth-spnego",
                        "requirement": "DISABLED",
                        "priority": 30,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    }
                ]
            },
            {
                "id": "8a496ed5-2356-4716-a195-fff21090ffc1",
                "alias": "Browser - Conditional OTP",
                "description": "Flow to determine if the OTP is required for the authentication",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "conditional-user-configured",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "auth-otp-form",
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    }
                ]
            },
            {
                "id": "13383e81-1407-4405-a752-b995c06feea2",
                "alias": "Copy of browser",
                "description": "browser based authentication not cool bro",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": false,
                "authenticationExecutions": [
                    {
                        "authenticator": "auth-cookie",
                        "requirement": "ALTERNATIVE",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "auth-spnego",
                        "requirement": "DISABLED",
                        "priority": 20,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "identity-provider-redirector",
                        "requirement": "ALTERNATIVE",
                        "priority": 25,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "requirement": "ALTERNATIVE",
                        "priority": 30,
                        "flowAlias": "Copy of browser forms",
                        "userSetupAllowed": false,
                        "autheticatorFlow": true
                    }
                ]
            },
            {
                "id": "4df02036-7ead-4411-95c6-57b637be611e",
                "alias": "Copy of browser Browser - Conditional OTP",
                "description": "Flow to determine if the OTP is required for the authentication",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": false,
                "authenticationExecutions": [
                    {
                        "authenticator": "conditional-user-configured",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "auth-otp-form",
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    }
                ]
            },
            {
                "id": "91d600e4-527b-4c10-ac47-f55a5bbddc7c",
                "alias": "Copy of browser forms",
                "description": "Username, password, otp and other auth forms.",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": false,
                "authenticationExecutions": [
                    {
                        "authenticator": "auth-username-password-form",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "requirement": "CONDITIONAL",
                        "priority": 20,
                        "flowAlias": "Copy of browser Browser - Conditional OTP",
                        "userSetupAllowed": false,
                        "autheticatorFlow": true
                    }
                ]
            },
            {
                "id": "eeb72b2b-3568-4508-8c02-3de699518177",
                "alias": "Direct Grant - Conditional OTP",
                "description": "Flow to determine if the OTP is required for the authentication",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "conditional-user-configured",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "direct-grant-validate-otp",
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    }
                ]
            },
            {
                "id": "4f09238b-c044-48f8-8def-febfabd7abb0",
                "alias": "First broker login - Conditional OTP",
                "description": "Flow to determine if the OTP is required for the authentication",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "conditional-user-configured",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "auth-otp-form",
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    }
                ]
            },
            {
                "id": "a525d44c-6261-4b5f-8187-7991357d46b5",
                "alias": "Handle Existing Account",
                "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "idp-confirm-link",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "flowAlias": "Account verification options",
                        "userSetupAllowed": false,
                        "autheticatorFlow": true
                    }
                ]
            },
            {
                "id": "f1e669d0-1b44-44b5-8992-b60ae1958b4c",
                "alias": "Reset - Conditional OTP",
                "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "conditional-user-configured",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "reset-otp",
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    }
                ]
            },
            {
                "id": "f2566db0-e455-4a77-8627-08429f754095",
                "alias": "User creation or linking",
                "description": "Flow for the existing/non-existing user alternatives",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticatorConfig": "create unique user config",
                        "authenticator": "idp-create-user-if-unique",
                        "requirement": "ALTERNATIVE",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "requirement": "ALTERNATIVE",
                        "priority": 20,
                        "flowAlias": "Handle Existing Account",
                        "userSetupAllowed": false,
                        "autheticatorFlow": true
                    }
                ]
            },
            {
                "id": "777163da-9d74-471b-9125-aceef09f3c67",
                "alias": "Verify Existing Account by Re-authentication",
                "description": "Reauthentication of existing account",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "idp-username-password-form",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "requirement": "CONDITIONAL",
                        "priority": 20,
                        "flowAlias": "First broker login - Conditional OTP",
                        "userSetupAllowed": false,
                        "autheticatorFlow": true
                    }
                ]
            },
            {
                "id": "edc242a1-822e-4945-8d62-70b826fa8d88",
                "alias": "bff",
                "description": "new flow bff",
                "providerId": "generic",
                "topLevel": false,
                "builtIn": false,
                "authenticationExecutions": []
            },
            {
                "id": "bf2ffb04-39eb-4de9-b302-29f8d2735cbb",
                "alias": "browser",
                "description": "browser based authentication not cool bro",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "auth-cookie",
                        "requirement": "ALTERNATIVE",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "auth-spnego",
                        "requirement": "DISABLED",
                        "priority": 20,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "identity-provider-redirector",
                        "requirement": "ALTERNATIVE",
                        "priority": 25,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "requirement": "ALTERNATIVE",
                        "priority": 30,
                        "flowAlias": "forms",
                        "userSetupAllowed": false,
                        "autheticatorFlow": true
                    }
                ]
            },
            {
                "id": "76ec235d-ea17-47a1-8497-51b561630630",
                "alias": "browser-for-fun",
                "description": "browser based authentication",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "reset-password",
                        "requirement": "DISABLED",
                        "priority": 0,
                        "flowAlias": "bff",
                        "userSetupAllowed": false,
                        "autheticatorFlow": true
                    }
                ]
            },
            {
                "id": "6ad9fe31-5e18-45c2-8d8e-ec64cde57c2a",
                "alias": "clients",
                "description": "Base authentication for clients",
                "providerId": "client-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "client-secret",
                        "requirement": "ALTERNATIVE",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "client-jwt",
                        "requirement": "ALTERNATIVE",
                        "priority": 20,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "client-secret-jwt",
                        "requirement": "ALTERNATIVE",
                        "priority": 30,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "client-x509",
                        "requirement": "ALTERNATIVE",
                        "priority": 40,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    }
                ]
            },
            {
                "id": "66831086-47c5-4b7b-bd47-a90f1bf20723",
                "alias": "direct grant",
                "description": "OpenID Connect Resource Owner Grant",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "direct-grant-validate-username",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "direct-grant-validate-password",
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "requirement": "CONDITIONAL",
                        "priority": 30,
                        "flowAlias": "Direct Grant - Conditional OTP",
                        "userSetupAllowed": false,
                        "autheticatorFlow": true
                    }
                ]
            },
            {
                "id": "97e96691-c3a9-49da-a532-d18b033455c6",
                "alias": "docker auth",
                "description": "Used by Docker clients to authenticate against the IDP",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "docker-http-basic-authenticator",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    }
                ]
            },
            {
                "id": "b18008dd-b315-4caa-8992-c0154ce7787c",
                "alias": "first broker login",
                "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "idp-review-profile",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "flowAlias": "User creation or linking",
                        "userSetupAllowed": false,
                        "autheticatorFlow": true
                    }
                ]
            },
            {
                "id": "bd4d3510-2799-4012-8882-027f7695cb4b",
                "alias": "forms",
                "description": "Username, password, otp and other auth forms.",
                "providerId": "basic-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "auth-username-password-form",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "requirement": "CONDITIONAL",
                        "priority": 20,
                        "flowAlias": "Browser - Conditional OTP",
                        "userSetupAllowed": false,
                        "autheticatorFlow": true
                    }
                ]
            },
            {
                "id": "d91e3c14-54e1-419f-b1f1-43339a580141",
                "alias": "http challenge",
                "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "no-cookie-redirect",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "flowAlias": "Authentication Options",
                        "userSetupAllowed": false,
                        "autheticatorFlow": true
                    }
                ]
            },
            {
                "id": "2b16b0c5-0560-4925-a117-7cbe6fa4f47f",
                "alias": "registration",
                "description": "registration flow",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "registration-page-form",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "flowAlias": "registration form",
                        "userSetupAllowed": false,
                        "autheticatorFlow": true
                    }
                ]
            },
            {
                "id": "c8dbf2d2-889a-492c-81c1-d041dd38d605",
                "alias": "registration form",
                "description": "registration form",
                "providerId": "form-flow",
                "topLevel": false,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "registration-user-creation",
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "registration-profile-action",
                        "requirement": "REQUIRED",
                        "priority": 40,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "registration-password-action",
                        "requirement": "REQUIRED",
                        "priority": 50,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "registration-recaptcha-action",
                        "requirement": "DISABLED",
                        "priority": 60,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    }
                ]
            },
            {
                "id": "b3c01cad-1f6b-4132-9a5c-80cc54b27ebb",
                "alias": "reset credentials",
                "description": "Reset credentials for a user if they forgot their password or something",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "reset-credentials-choose-user",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "reset-credential-email",
                        "requirement": "REQUIRED",
                        "priority": 20,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "authenticator": "reset-password",
                        "requirement": "REQUIRED",
                        "priority": 30,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    },
                    {
                        "requirement": "CONDITIONAL",
                        "priority": 40,
                        "flowAlias": "Reset - Conditional OTP",
                        "userSetupAllowed": false,
                        "autheticatorFlow": true
                    }
                ]
            },
            {
                "id": "ce62a973-c672-478e-8756-09d8d27a6761",
                "alias": "saml ecp",
                "description": "SAML ECP Profile Authentication Flow",
                "providerId": "basic-flow",
                "topLevel": true,
                "builtIn": true,
                "authenticationExecutions": [
                    {
                        "authenticator": "http-basic-authenticator",
                        "requirement": "REQUIRED",
                        "priority": 10,
                        "userSetupAllowed": false,
                        "autheticatorFlow": false
                    }
                ]
            }
        ],
        "authenticatorConfig": [
            {
                "id": "eb03d05e-0dcb-4533-9391-3e45a20fba4c",
                "config": {
                    "update.profile.on.first.login": "missing"
                }
            },
            {
                "id": "fe4adbd1-838e-4655-b157-9421353fa7c9",
                "alias": "create unique user config",
                "config": {
                    "require.password.update.after.registration": "false"
                }
            }
        ],
        "requiredActions": [
            {
                "alias": "CONFIGURE_TOTP",
                "name": "Configure OTP",
                "providerId": "CONFIGURE_TOTP",
                "enabled": true,
                "defaultAction": false,
                "priority": 10,
                "config": {}
            },
            {
                "alias": "terms_and_conditions",
                "name": "Terms and Conditions",
                "providerId": "terms_and_conditions",
                "enabled": false,
                "defaultAction": false,
                "priority": 20,
                "config": {}
            },
            {
                "alias": "UPDATE_PROFILE",
                "name": "Update Profile",
                "providerId": "UPDATE_PROFILE",
                "enabled": true,
                "defaultAction": false,
                "priority": 40,
                "config": {}
            },
            {
                "name": "Update Profile +",
                "providerId": "UPDATE_PASSWORD",
                "enabled": true,
                "defaultAction": false,
                "priority": 40,
                "config": {}
            },
            {
                "alias": "VERIFY_EMAIL",
                "name": "Verify Email",
                "providerId": "VERIFY_EMAIL",
                "enabled": true,
                "defaultAction": false,
                "priority": 50,
                "config": {}
            },
            {
                "alias": "update_user_locale",
                "name": "Update User Locale",
                "providerId": "update_user_locale",
                "enabled": true,
                "defaultAction": false,
                "priority": 1000,
                "config": {}
            },
            {
                "alias": "reset-password",
                "name": "new-reset-password",
                "providerId": "reset-password",
                "enabled": true,
                "defaultAction": false,
                "priority": 1001,
                "config": {}
            }
        ],
        "browserFlow": "browser",
        "registrationFlow": "registration",
        "directGrantFlow": "direct grant",
        "resetCredentialsFlow": "reset credentials",
        "clientAuthenticationFlow": "clients",
        "dockerAuthenticationFlow": "docker auth",
        "attributes": {},
        "keycloakVersion": "10.0.0",
        "userManagedAccessAllowed": false
    }
parameters: []
headers:
  - name: Content-Type
    value: application/json
authentication:
  type: bearer
  disabled: false
  token: "{{token}}"
  prefix: ""
metaSortKey: -1685445549043
isPrivate: false
settingStoreCookies: true
settingSendCookies: true
settingDisableRenderRequestBody: false
settingEncodeUrl: true
settingRebuildPath: true
settingFollowRedirects: global
